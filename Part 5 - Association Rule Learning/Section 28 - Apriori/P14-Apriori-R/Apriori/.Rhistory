setwd("/media/anmol/Anmol Ext HDD/Anmol/Programming/Machine Learning/Part 5 - Association Rule Learning/Section 28 - Apriori/P14-Apriori-R/Apriori")
# Data Preprocessing
dataset = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
View(dataset)
install.packages('arules')
#install.packages('arules')
library(arules)
# Data Preprocessing
data = read.csv('Market_Basket_Optimisation.csv', header = FALSE)
dataset = read.transactions('Market_Basket_Optimisation.csv', sep = ',', rm.duplicates = TRUE)
View(dataset)
View(data)
summary(dataset)
itemFrequencyPlot(dataset, topN = 100)
itemFrequencyPlot(dataset, topN = 10)
3*7/7500
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.8)) # Support calculated as - (3*7/7500) - (product purchased 3 times a day, over a week = 3 * 7 / number of transactions = 7500)
View(rules)
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.4)) # Support calculated as - (3*7/7500) - (product purchased 3 times a day, over a week = 3 * 7 / number of transactions = 7500)
# Visualizing the results
inspect(rules[1:10])
# Visualizing the results
inspect(sort(rules, by = 'lift')[1:10])
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.003, confidence = 0.2)) # Support calculated as - (3*7/7500) - (product purchased 3 times a day, over a week = 3 * 7 / number of transactions = 7500)
# Visualizing the results
inspect(sort(rules, by = 'lift')[1:10])
# Training Apriori on the dataset
rules = apriori(data = dataset, parameter = list(support = 0.004, confidence = 0.2)) # Support calculated as - (3*7/7500) - (product purchased 3/4/5/etc times a day, over a week = 3 * 7 / number of transactions = 7500)
# Visualizing the results
inspect(sort(rules, by = 'lift')[1:10])

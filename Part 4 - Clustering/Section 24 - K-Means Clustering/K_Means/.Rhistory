setwd("/media/anmol/Anmol Ext HDD/Anmol/Programming/Machine Learning/Part 4 - Clustering/Section 24 - K-Means Clustering/K_Means")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
View(X)
set.seed(6)
wcss = vector()
for (i in 1:10) sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
set.seed(6)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
setwd("/media/anmol/Anmol Ext HDD/Anmol/Programming/Machine Learning/Part 4 - Clustering/Section 24 - K-Means Clustering/K_Means")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(6)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Using the elbow method to find the optimal number of clusters
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# K-Means Clustering
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# K-Means Clustering
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# K-Means Clustering
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# K-Means Clustering
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(0)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(0)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(0)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(0)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
set.seed(69)
kmeans = kmeans(X, 5, iter.max = 300, nstart = 10)
library(cluster)
clusplot(X,
kmeans$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster of Clients"),
xlab = 'Annual Income',
ylab = 'Spending Score')
set.seed(29)
kmeans = kmeans(X, 5, iter.max = 300, nstart = 10)
# Visualising clusters
library(cluster)
clusplot(X,
kmeans$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster of Clients"),
xlab = 'Annual Income',
ylab = 'Spending Score')
# Applying k-means to mall dataset
set.seed(69)
kmeans = kmeans(X, 5, iter.max = 300, nstart = 10)
# Visualising clusters
library(cluster)
clusplot(X,
kmeans$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster of Clients"),
xlab = 'Annual Income',
ylab = 'Spending Score')
# K-Means Clustering
# Importing the mall dataset
dataset = read.csv("Mall_Customers.csv")
X = dataset[4:5]
# Using the elbow method to find the optimal number of clusters
set.seed(0)
wcss = vector()
for (i in 1:10) wcss[i] = sum(kmeans(X, i)$withinss)
plot(1:10, wcss, type = "b", main = paste('Cluster of clients'), xlab = "Number of clusters", ylab = "WCSS")
# Applying k-means to mall dataset
set.seed(69)
kmeans = kmeans(X, 5, iter.max = 300, nstart = 10)
# Visualising clusters
library(cluster)
clusplot(X,
kmeans$cluster,
lines = 0,
shade = TRUE,
color = TRUE,
labels = 2,
plotchar = FALSE,
span = TRUE,
main = paste("Cluster of Clients"),
xlab = 'Annual Income',
ylab = 'Spending Score')
